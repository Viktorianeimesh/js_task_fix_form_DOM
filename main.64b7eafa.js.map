{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","getSeperateWord","str","result","letter","toUpperCase","toLocaleUpperCase","slice","input","label","createElement","className","htmlFor","id","innerHTML","name","parentElement","append","placeholder"],"mappings":";AAAA,aA0BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBD,IAAMA,EAASC,SAASC,iBAAiB,SAEzC,SAASC,EAAgBC,GACnBC,IADwB,EACxBA,EAAS,GAEQD,EAAAA,EAAAA,GAHO,IAGF,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfE,IAAAA,EAAe,EAAA,MACpBA,EAAOC,gBAAkBD,EAC3BD,GAAUC,EAEVD,GAAcC,IAAAA,OAAAA,IAPU,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAWrBD,OAAAA,EAAO,GAAGG,oBAAsBH,EAAOI,MAAM,GAGlCT,IAQnB,EARmBA,EAAAA,EAAAA,GAQnB,IAR2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBU,IAAAA,EAAiB,EAAA,MACpBC,EAAQV,SAASW,cAAc,SAErCD,EAAME,UAAY,cAClBF,EAAMG,QAAUJ,EAAMK,GACtBJ,EAAMK,UAAYb,EAAgBO,EAAMO,MACxCP,EAAMQ,cAAcC,OAAOR,GAC3BD,EAAMU,YAAcjB,EAAgBO,EAAMO,OAC3C,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.64b7eafa.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nfunction getSeperateWord(str) {\n  let result = '';\n\n  for (const letter of str) {\n    if (letter.toUpperCase() !== letter) {\n      result += letter;\n    } else {\n      result += ` ${letter}`;\n    }\n  }\n\n  return result[0].toLocaleUpperCase() + result.slice(1);\n}\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.htmlFor = input.id;\n  label.innerHTML = getSeperateWord(input.name);\n  input.parentElement.append(label);\n  input.placeholder = getSeperateWord(input.name);\n}\n"]}